{"version":"0.3.0","body":"function main(workbook: ExcelScript.Workbook, sHTML: string) {\n    const reTable = RegExp(\"<table[^>]*>\",\"g\");\n    const reTbody = RegExp(\"<tBody[^>]*>\",\"g\");\n    const reHeader = RegExp(\"<th[^>]*>\", \"g\");\n    const reRow = RegExp(\"<tr[^>]*>\",\"g\");\n    const reCell = RegExp(\"<td[^>]*>\", \"g\");   \n    let sReturn=\"[\" as string;\n    let sTable: string = sHTML.split(reTable)[1].split(\"</table>\")[0];\n    sTable=sTable\n        .replace(reTbody,\"\")\n        .replace(\"<tbody>\", \"\")\n        .replace(\"<thead>\", \"\")\n        .replace(\"</thead>\", \"\");\n\n    let aRows: string[] = sTable.split(reRow);\n    aRows.shift();\n\n    let aHeaders=[]= aRows[0].split(reHeader)\n    if (aHeaders.length<2){\n        aHeaders = aRows[0].split(reCell)\n    }\n    aHeaders.shift();\n    aRows.forEach( row =>{\n        if(row.trim().length>4 && !row.includes(\"<th>\")){\n            let sRow=\"{\"\n            aHeaders.forEach((header,index) =>{\n                sRow +=removeHTML(header) + \":'\" + \n                removeHTML(row.trim().split(reCell)[index + 1])+\"',\"\n            })\n            sReturn += sRow.substring(0, sRow.length - 1) + \"},\"\n        }\n    })\n    return sReturn.substring(0, sReturn.length - 1)+\"]\" ;\n}\n\nfunction removeHTML(sHTML: string){\n    const reDiv = RegExp(\"<div[^>]*>\", \"g\");\n    return sHTML.replace(\"</th>\", \"\")\n    .replace(\"</tr>\", \"\")\n    .replace(\"</td>\", \"\")\n    .replace(\"</div>\", \"\")\n    .replace(reDiv, \"\")\n    .trim()\n}","description":"","noCodeMetadata":"","parameterInfo":"{\"version\":1,\"originalParameterOrder\":[{\"name\":\"sHTML\",\"index\":0}],\"parameterSchema\":{\"type\":\"object\",\"required\":[\"sHTML\"],\"properties\":{\"sHTML\":{\"type\":\"string\"}}},\"returnSchema\":{\"type\":\"object\",\"properties\":{\"result\":{\"type\":\"string\"}}},\"signature\":{\"comment\":\"\",\"parameters\":[{\"name\":\"workbook\",\"comment\":\"\"},{\"name\":\"sHTML\",\"comment\":\"\"}]}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}